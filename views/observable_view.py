# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'observable.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from typing import List
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QDialog
from obs_abstract.abstract_clases import Observable
from obs_abstract.abstract_clases import Observer

class ObservableView(QDialog):
    def setupUi(self, ObservableView):
        # view
        ObservableView.setObjectName("ObservableView")
        ObservableView.resize(400, 200)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(ObservableView.sizePolicy().hasHeightForWidth())
        ObservableView.setSizePolicy(sizePolicy)
        ObservableView.setMinimumSize(QtCore.QSize(400, 200))
        ObservableView.setMaximumSize(QtCore.QSize(400, 200))
        ObservableView.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        ObservableView.setWindowFlag(QtCore.Qt.WindowCloseButtonHint, False)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("./Imagenes/manager.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        ObservableView.setWindowIcon(icon)
        ObservableView.setWindowTitle("Estación Meteorológica")

        # label state
        self.lbl_state = QtWidgets.QLabel(ObservableView)
        self.lbl_state.setGeometry(QtCore.QRect(40, 20, 311, 41))
        font = QtGui.QFont()
        font.setFamily("JetBrains Mono")
        font.setPointSize(12)
        self.lbl_state.setFont(font)
        self.lbl_state.setAlignment(QtCore.Qt.AlignCenter)
        self.lbl_state.setObjectName("lbl_state")
        self.lbl_state.setText("State")

        # label contador de observadores
        self.lbl_count = QtWidgets.QLabel(ObservableView)
        self.lbl_count.setGeometry(QtCore.QRect(40, 80, 311, 41))
        font = QtGui.QFont()
        font.setFamily("JetBrains Mono")
        font.setPointSize(12)
        self.lbl_count.setFont(font)
        self.lbl_count.setAlignment(QtCore.Qt.AlignCenter)
        self.lbl_count.setObjectName("lbl_count")
        self.lbl_count.setText("Contador")

        # boton para actuializar observadores
        self.btn_update = QtWidgets.QPushButton(ObservableView)
        self.btn_update.setGeometry(QtCore.QRect(70, 140, 261, 31))
        font = QtGui.QFont()
        font.setFamily("JetBrains Mono")
        font.setPointSize(12)
        self.btn_update.setFont(font)
        self.btn_update.setObjectName("btn_update")
        self.btn_update.setText("Update Temperatura")
        self.btn_update.clicked.connect(self.update)

        QtCore.QMetaObject.connectSlotsByName(ObservableView)

        ObservableView.show()

    def attach(self, observer: Observer) -> None:
        self.observable.attach(observer)
        self.lbl_count.setText(f"Observers: {len(self.observable._observers)}")

    def detach(self, observer: Observer) -> None:
        self.observable.detach(observer)
        self.lbl_count.setText(f"Observers: {len(self.observable._observers)}")

    def update(self):
        self.observable.informa_temperatura()

    @property
    def observable(self) -> Observable:
        return self._observable

    @observable.setter
    def observable(self, valor):
        self._observable = valor
        self.lbl_state.setText("Observable iniciado.")
