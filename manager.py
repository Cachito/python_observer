# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'manager.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys
import random
from sys import maxsize
import telnetlib
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow
from obs_abstract.abstract_clases import Observer
from obs_concrete.concrete_clases import Archivo, Laptop, Telefono
from obs_concrete.concrete_clases import ServicioMeteorologico
from views.observable import ObservableView


class ManagerView(object):
    def setupUi(self, ManagerView):
        # vista
        ManagerView.setObjectName("ManagerView")
        ManagerView.resize(551, 143)
        ManagerView.setMaximumSize(551, 143)
        ManagerView.setMinimumSize(551, 143)
        ManagerView.setWindowFlag(QtCore.Qt.WindowCloseButtonHint, False)
        icon_form = QtGui.QIcon()
        icon_form.addPixmap(QtGui.QPixmap("./imagenes/manager_2.ico"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        ManagerView.setWindowIcon(icon_form)
        ManagerView.setWindowTitle("Manager")

        #centralwidger
        self.centralwidget = QtWidgets.QWidget(ManagerView)
        self.centralwidget.setObjectName("centralwidget")

        #botón iniciar observable
        self.btn_iniciar_observable = QtWidgets.QPushButton(self.centralwidget)
        self.btn_iniciar_observable.setGeometry(QtCore.QRect(30, 30, 151, 81))
        font = QtGui.QFont()
        font.setFamily("JetBrains Mono")
        font.setPointSize(12)
        self.btn_iniciar_observable.setFont(font)
        self.btn_iniciar_observable.setAutoFillBackground(False)
        self.btn_iniciar_observable.setObjectName("btn_iniciar_observable")
        self.btn_iniciar_observable.setText("Iniciar\nObservable")
        #self.btn_iniciar_observable.clicked.connect(self.show_observable)

        #botón iniciar observador
        self.btn_iniciar_observador = QtWidgets.QPushButton(self.centralwidget)
        self.btn_iniciar_observador.setGeometry(QtCore.QRect(200, 30, 151, 81))
        font = QtGui.QFont()
        font.setFamily("JetBrains Mono")
        font.setPointSize(12)
        self.btn_iniciar_observador.setFont(font)
        self.btn_iniciar_observador.setAutoFillBackground(False)
        self.btn_iniciar_observador.setObjectName("btn_iniciar_observador")
        self.btn_iniciar_observador.setText("Iniciar\nObservador")
        #self.btn_iniciar_observador.clicked.connect(self.show_observador)

        #botón terminar
        self.btn_terminar = QtWidgets.QPushButton(self.centralwidget)
        self.btn_terminar.setGeometry(QtCore.QRect(370, 30, 151, 81))
        font = QtGui.QFont()
        font.setFamily("JetBrains Mono")
        font.setPointSize(12)
        self.btn_terminar.setFont(font)
        self.btn_terminar.setAutoFillBackground(False)
        self.btn_terminar.setObjectName("btn_terminar")
        self.btn_terminar.setText("Terminar")
        self.btn_terminar.clicked.connect(self.end_program)

        ManagerView.setCentralWidget(self.centralwidget)

        #self.retranslateUi(ManagerView)

        # connect?
        QtCore.QMetaObject.connectSlotsByName(ManagerView)

        self.observadores = []

    #def retranslateUi(self, ManagerView):
    #    _translate = QtCore.QCoreApplication.translate
    #    ManagerView.setWindowTitle(_translate("ManagerView", "Manage"))
    #    self.btn_iniciar_observable.setText(_translate("ManagerView", "Iniciar\nObservable"))
    #    self.btn_iniciar_observador.setText(_translate("ManagerView", "Iniciar\nObservador"))
    #    self.btn_terminar.setText(_translate("ManagerView", "Terminar"))

    def end_program(self):
        sys.exit()

    #def show_observador(self):
    #    observador = None
    #    tipo_observador = random.randint(1, 9)
    #
    #    if tipo_observador >= 1 and tipo_observador <= 3:
    #        observador = Archivo
    #    elif tipo_observador > 3 and tipo_observador <= 6:
    #        observador = Laptop
    #    else:
    #        observador = Telefono
    #
    #    self.observadores.append(observador)
    #
    #    for o in self.observadores:
    #        print(o)
    #    print('\n')


    def show_observable(self):
        observable = QMainWindow()
        ui_observable = UiObservable
        ui_observable.setupUi(observable)


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    ManagerView = QtWidgets.QMainWindow()
    ui = ManagerView()
    ui.setupUi(ManagerView)
    ManagerView.show()
    sys.exit(app.exec_())
